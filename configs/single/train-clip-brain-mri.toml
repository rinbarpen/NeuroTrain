# CLIP Brain MRI训练配置文件
# 基于CLIP模型的Brain MRI数据集训练配置

# 基础配置
output_dir = "runs"
task = "clip_brain_mri"
device = "cuda"
seed = 42
run_id = ""

# 类别配置（Brain MRI相关）
classes = [
    "normal_brain",
    "tumor_brain", 
    "stroke_lesion",
    "white_matter_lesion",
    "cortical_atrophy",
    "ventricular_enlargement"
]

# 评估指标配置
metrics = [
    "clip_accuracy",
    "image_retrieval_recall@1",
    "image_retrieval_recall@5", 
    "text_retrieval_recall@1",
    "text_retrieval_recall@5",
    "image_text_similarity",
    "zero_shot_classification_accuracy"
]

# CLIP模型配置
[model]
name = "CLIP"

[model.config]
# Hugging Face CLIP模型配置
model_name = "openai/clip-vit-base-patch32"
cache_dir = "cache/models/pretrained"
device = "cuda"
dtype = "float16"

# 模型输入配置
input_sizes = [
    [1, 3, 224, 224],
    [1, 77]
]
dtypes = ["float32", "int64"]

# 图像预处理
[transform]
RESIZE = [224, 224]
HFLIP = [0.5]
VFLIP = [0.5]
ROTATION = [5.0]
PIL_TO_TENSOR = []
CONVERT_IMAGE_DTYPE = ["float32"]

# 数据集配置
[dataset]
name = "BrainMRI_CLIP"
base_dir = "data/brain_mri_clip"

# 数据加载配置
[dataloader]
shuffle = true
num_workers = -1
pin_memory = true
drop_last = true

# 训练配置
[train]
batch_size = 32
epoch = 100
save_period = 10
save_recovery_period = 1
grad_accumulation_steps = 1

[train.optimizer]
type = "AdamW"
learning_rate = 0.0001
weight_decay = 0.01
betas = [0.9, 0.98]

[train.lr_scheduler]
type = "cosine_annealing"
T_max = 100
eta_min = 0.000001
warmup_epochs = 10
warmup_start_lr = 0.000001

[train.early_stopping]
patience = 15

# 验证配置
[valid]
batch_size = 64
period = 1
save_best = true
compute_retrieval_metrics = true

# 测试配置  
[test]
batch_size = 64
compute_all_metrics = true
save_predictions = true

# 预测配置
[predict]
batch_size = 64
save_features = true
save_similarities = true

# 私有配置（日志、调试等）
[private]
mode = 1

[private.log]
verbose = true
debug = false
log_format = "%(asctime)s %(levelname)s | %(name)s | %(message)s"
log_file_format = '%Y-%m-%d %H_%M_%S'

[private.wandb]
enabled = false
project = "clip-brain-mri"
entity = "neurotrain-lab"
tags = ["clip", "brain-mri", "medical-imaging"]
notes = "CLIP model training on Brain MRI dataset"

[private.checkpoint]
save_optimizer = true
save_scheduler = true
save_best_only = false
monitor_metric = "valid_clip_accuracy"

[private.visualization]
plot_training_curves = true
save_attention_maps = true
save_similarity_matrices = true
plot_retrieval_examples = true